version: '3.8'

services:
  nestjs:
    container_name: ${APP_CONTAINER_NAME}
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public
    volumes:
      - .:/usr/src/app
        - /usr/src/app/node_modules
    depends_on:
      - redis
      - postgres
    ports:
      - ${APP_PORT}:${APP_PORT}
    command: npm run start:dev

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis:/data
  postgres:
    container_name: ${DATABASE_CONTAINER_NAME}
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data

  pgadmin:
    container_name: ${PGADMIN_CONTAINER_NAME}
    image: dpage/pgadmin4:5.5
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - ${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}
    volumes:
      - ./.docker/pgadmin:/var/lib/pgadmin
volumes:
  redis:
    driver: local
  docker-nest-postgres:
